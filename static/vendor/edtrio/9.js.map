{"version":3,"file":"9.js","sources":["webpack:///./src/plugins/GeoGebra/gg.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*eslint-disable */\n\n/*\r\n  @author: GeoGebra - Dynamic Mathematics for Everyone, http://www.geogebra.org\r\n  @license: This file is subject to the GeoGebra Non-Commercial License Agreement, see http://www.geogebra.org/license. For questions please write us at office@geogebra.org.\r\n*/\nvar latestVersion = \"5.0.381.0\";\nvar isRenderGGBElementEnabled = false;\nvar scriptLoadStarted = false;\nvar html5AppletsToProcess = null;\nvar ggbHTML5LoadedCodebaseIsWebSimple = false;\nvar ggbHTML5LoadedCodebaseVersion = null;\nvar ggbHTML5LoadedScript = null;\nvar ggbCompiledResourcesLoadFinished = false;\nvar ggbCompiledResourcesLoadInProgress = false;\nvar ggbCompiledAppletsLoaded = false;\n\nvar GGBApplet = function GGBApplet() {\n  \"use strict\";\n\n  var applet = {};\n  var ggbVersion = \"5.0\";\n  var parameters = {};\n  var views = null;\n  var html5NoWebSimple = false;\n  var html5NoWebSimpleParamExists = false;\n  var appletID = null;\n  var initComplete = false;\n  var html5OverwrittenCodebaseVersion = null;\n  var html5OverwrittenCodebase = null;\n\n  for (var i = 0; i < arguments.length; i++) {\n    var p = arguments[i];\n\n    if (p !== null) {\n      switch (_typeof(p)) {\n        case \"number\":\n          ggbVersion = p.toFixed(1);\n          break;\n\n        case \"string\":\n          if (p.match(new RegExp(\"^[0-9]\\\\.[0-9]+$\"))) {\n            ggbVersion = p;\n          } else {\n            appletID = p;\n          }\n\n          break;\n\n        case \"object\":\n          if (typeof p.is3D !== \"undefined\") {\n            views = p;\n          } else {\n            parameters = p;\n          }\n\n          break;\n\n        case \"boolean\":\n          html5NoWebSimple = p;\n          html5NoWebSimpleParamExists = true;\n          break;\n      }\n    }\n  }\n\n  if (views === null) {\n    views = {\n      is3D: false,\n      AV: false,\n      SV: false,\n      CV: false,\n      EV2: false,\n      CP: false,\n      PC: false,\n      DA: false,\n      FI: false,\n      PV: false,\n      macro: false\n    };\n\n    if (parameters.material_id !== undefined && !html5NoWebSimpleParamExists) {\n      html5NoWebSimple = true;\n    }\n  }\n\n  if (appletID !== null && parameters.id === undefined) {\n    parameters.id = appletID;\n  }\n\n  var jnlpFilePath = \"\";\n  var html5Codebase = \"\";\n  var isHTML5Offline = false;\n  var loadedAppletType = null;\n  var html5CodebaseVersion = null;\n  var html5CodebaseScript = null;\n  var html5CodebaseIsWebSimple = false;\n  var previewImagePath = null;\n  var previewLoadingPath = null;\n  var previewPlayPath = null;\n  var fonts_css_url = null;\n  var jnlpBaseDir = null;\n  var preCompiledScriptPath = null;\n  var preCompiledResourcePath = null;\n  var preCompiledScriptVersion = null;\n\n  if (parameters.height !== undefined) {\n    parameters.height = Math.round(parameters.height);\n  }\n\n  if (parameters.width !== undefined) {\n    parameters.width = Math.round(parameters.width);\n  }\n\n  var parseVersion = function parseVersion(d) {\n    return parseFloat(d) > 4 ? parseFloat(d) : 5;\n  };\n\n  applet.setHTML5Codebase = function (codebase, offline) {\n    html5OverwrittenCodebase = codebase;\n    setHTML5CodebaseInternal(codebase, offline);\n  };\n\n  applet.setJavaCodebaseVersion = function (version) {};\n\n  applet.setHTML5CodebaseVersion = function (version, offline) {\n    var numVersion = parseFloat(version);\n\n    if (numVersion !== NaN && numVersion < 5) {\n      console.log(\"The GeoGebra HTML5 codebase version \" + numVersion + \" is deprecated. Using version \" + latestVersion + \" instead.\");\n      return;\n    }\n\n    html5OverwrittenCodebaseVersion = version;\n    setDefaultHTML5CodebaseForVersion(version, offline);\n  };\n\n  applet.getHTML5CodebaseVersion = function () {\n    return html5CodebaseVersion;\n  };\n\n  applet.getParameters = function () {\n    return parameters;\n  };\n\n  applet.setJavaCodebase = function (codebase, offline) {};\n\n  applet.setFontsCSSURL = function (url) {\n    fonts_css_url = url;\n  };\n\n  applet.setGiacJSURL = function (url) {};\n\n  applet.setJNLPFile = function (newJnlpFilePath) {\n    jnlpFilePath = newJnlpFilePath;\n  };\n\n  applet.setJNLPBaseDir = function (baseDir) {};\n\n  applet.inject = function () {\n    function isOwnIFrame() {\n      return window.frameElement && window.frameElement.getAttribute(\"data-singleton\");\n    }\n\n    var type = \"auto\";\n    var container_ID = parameters.id;\n    var container;\n    var noPreview = false;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var p = arguments[i];\n\n      if (typeof p === \"string\") {\n        p = p.toLowerCase();\n\n        if (p === \"preferjava\" || p === \"preferhtml5\" || p === \"java\" || p === \"html5\" || p === \"auto\" || p === \"screenshot\" || p === \"prefercompiled\" || p === \"compiled\") {\n          type = p;\n        } else {\n          container_ID = arguments[i];\n        }\n      } else if (typeof p === \"boolean\") {\n        noPreview = p;\n      } else if (p instanceof HTMLElement) {\n        container = p;\n      }\n    }\n\n    continueInject();\n\n    function continueInject() {\n      if (!initComplete) {\n        setTimeout(continueInject, 200);\n        return;\n      }\n\n      type = detectAppletType(type);\n      var appletElem = container || document.getElementById(container_ID);\n\n      if (!appletElem) {\n        console.log(\"possibly bug on ajax loading? \");\n        return;\n      }\n\n      applet.removeExistingApplet(appletElem, false);\n\n      if (parameters.width === undefined && appletElem.clientWidth) {\n        parameters.width = appletElem.clientWidth;\n      }\n\n      if (parameters.height === undefined && appletElem.clientHeight) {\n        parameters.height = appletElem.clientHeight;\n      }\n\n      if (!(parameters.width && parameters.height) && type === \"html5\") {\n        delete parameters.width;\n        delete parameters.height;\n      }\n\n      loadedAppletType = type;\n\n      if (type === \"screenshot\") {\n        injectScreenshot(appletElem, parameters);\n      } else if (type === \"compiled\") {\n        injectCompiledApplet(appletElem, parameters, true);\n      } else {\n        var playButton = false;\n\n        if (parameters.hasOwnProperty(\"playButton\") && parameters.playButton || parameters.hasOwnProperty(\"clickToLoad\") && parameters.clickToLoad) {\n          playButton = true;\n        } else if (parameters.hasOwnProperty(\"playButtonAutoDecide\") && parameters.playButtonAutoDecide) {\n          playButton = (!isInIframe() || isOwnIFrame()) && isMobileDevice();\n        }\n\n        if (playButton) {\n          loadedAppletType = \"screenshot\";\n          injectPlayButton(appletElem, parameters, noPreview, type);\n        } else {\n          injectHTML5Applet(appletElem, parameters, noPreview);\n        }\n      }\n    }\n\n    return;\n  };\n\n  function isInIframe() {\n    try {\n      return window.self !== window.top;\n    } catch (e) {\n      return true;\n    }\n  }\n\n  function isMobileDevice() {\n    if (parameters.hasOwnProperty(\"screenshotGenerator\") && parameters.screenshotGenerator) {\n      return false;\n    }\n\n    return Math.max(screen.width, screen.height) < 800;\n  }\n\n  applet.getViews = function () {\n    return views;\n  };\n\n  applet.isJavaInstalled = function () {\n    return false;\n  };\n\n  function pluginEnabled(name) {\n    var plugins = navigator.plugins,\n        i = plugins.length,\n        regExp = new RegExp(name, \"i\");\n\n    while (i--) {\n      if (regExp.test(plugins[i].name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var getTubeURL = function getTubeURL() {\n    var tubeurl, protocol;\n\n    if (parameters.tubeurl !== undefined) {\n      tubeurl = parameters.tubeurl;\n    } else if (window.location.host.indexOf(\"www.geogebra.org\") > -1 || window.location.host.indexOf(\"www-beta.geogebra.org\") > -1 || window.location.host.indexOf(\"www-test.geogebra.org\") > -1 || window.location.host.indexOf(\"alpha.geogebra.org\") > -1 || window.location.host.indexOf(\"beta.geogebra.org\") > -1 || window.location.host.indexOf(\"tube.geogebra.org\") > -1 || window.location.host.indexOf(\"tube-beta.geogebra.org\") > -1 || window.location.host.indexOf(\"cloud.geogebra.org\") > -1 || window.location.host.indexOf(\"cloud-beta.geogebra.org\") > -1 || window.location.host.indexOf(\"cloud-stage.geogebra.org\") > -1 || window.location.host.indexOf(\"stage.geogebra.org\") > -1 || window.location.host.indexOf(\"tube-test.geogebra.org\") > -1) {\n      tubeurl = window.location.protocol + \"//\" + window.location.host;\n    } else {\n      if (window.location.protocol.substr(0, 4) === \"http\") {\n        protocol = window.location.protocol;\n      } else {\n        protocol = \"http:\";\n      }\n\n      tubeurl = protocol + \"//www.geogebra.org\";\n    }\n\n    return tubeurl;\n  };\n\n  var fetchParametersFromTube = function fetchParametersFromTube(successCallback) {\n    var tubeurl = getTubeURL();\n\n    var api_request = {\n      request: {\n        \"-api\": \"1.0.0\",\n        login: {\n          \"-type\": \"cookie\",\n          \"-getuserinfo\": \"false\"\n        },\n        task: {\n          \"-type\": \"fetch\",\n          fields: {\n            field: [{\n              \"-name\": \"id\"\n            }, {\n              \"-name\": \"geogebra_format\"\n            }, {\n              \"-name\": \"width\"\n            }, {\n              \"-name\": \"height\"\n            }, {\n              \"-name\": \"toolbar\"\n            }, {\n              \"-name\": \"menubar\"\n            }, {\n              \"-name\": \"inputbar\"\n            }, {\n              \"-name\": \"reseticon\"\n            }, {\n              \"-name\": \"labeldrags\"\n            }, {\n              \"-name\": \"shiftdragzoom\"\n            }, {\n              \"-name\": \"rightclick\"\n            }, {\n              \"-name\": \"ggbbase64\"\n            }, {\n              \"-name\": \"preview_url\"\n            }]\n          },\n          filters: {\n            field: [{\n              \"-name\": \"id\",\n              \"#text\": \"\" + parameters.material_id + \"\"\n            }]\n          },\n          order: {\n            \"-by\": \"id\",\n            \"-type\": \"asc\"\n          },\n          limit: {\n            \"-num\": \"1\"\n          }\n        }\n      }\n    },\n        success = function success() {\n      var text = xhr.responseText;\n      var jsondata = JSON.parse(text);\n      var item = null;\n\n      for (i = 0; i < jsondata.responses.response.length; i++) {\n        if (jsondata.responses.response[i].item !== undefined) {\n          item = jsondata.responses.response[i].item;\n        }\n      }\n\n      if (item === null) {\n        onError();\n        return;\n      }\n\n      if (item.geogebra_format !== \"\") {\n        ggbVersion = item.geogebra_format;\n      }\n\n      if (parameters.ggbBase64 === undefined) {\n        parameters.ggbBase64 = item.ggbBase64;\n      }\n\n      if (parameters.width === undefined) {\n        parameters.width = item.width;\n      }\n\n      if (parameters.height === undefined) {\n        parameters.height = item.height;\n      }\n\n      if (parameters.showToolBar === undefined) {\n        parameters.showToolBar = item.toolbar === \"true\";\n      }\n\n      if (parameters.showMenuBar === undefined) {\n        parameters.showMenuBar = item.menubar === \"true\";\n      }\n\n      if (parameters.showAlgebraInput === undefined) {\n        parameters.showAlgebraInput = item.inputbar === \"true\";\n      }\n\n      if (parameters.showResetIcon === undefined) {\n        parameters.showResetIcon = item.reseticon === \"true\";\n      }\n\n      if (parameters.enableLabelDrags === undefined) {\n        parameters.enableLabelDrags = item.labeldrags === \"true\";\n      }\n\n      if (parameters.enableShiftDragZoom === undefined) {\n        parameters.enableShiftDragZoom = item.shiftdragzoom === \"true\";\n      }\n\n      if (parameters.enableRightClick === undefined) {\n        parameters.enableRightClick = item.rightclick === \"true\";\n      }\n\n      if (parameters.showToolBarHelp === undefined) {\n        parameters.showToolBarHelp = parameters.showToolBar;\n      }\n\n      if (parseFloat(item.geogebra_format) >= 5) {\n        views.is3D = true;\n      }\n\n      var previewUrl = item.previewUrl === undefined ? tubeurl + \"/files/material-\" + item.id + \".png\" : item.previewUrl;\n      applet.setPreviewImage(previewUrl, tubeurl + \"/images/GeoGebra_loading.png\", tubeurl + \"/images/applet_play.png\");\n      successCallback();\n    };\n\n    var url = tubeurl + \"/api/json.php\";\n    var xhr = createCORSRequest(\"POST\", url);\n\n    var onError = function onError() {\n      log(\"Error: The request for fetching material_id \" + parameters.material_id + \" from tube was not successful.\");\n    };\n\n    if (!xhr) {\n      onError();\n      return;\n    }\n\n    xhr.onload = success;\n    xhr.onerror = onError;\n\n    xhr.onprogress = function () {};\n\n    if (xhr.setRequestHeader) {\n      xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n    }\n\n    xhr.send(JSON.stringify(api_request));\n  };\n\n  function createCORSRequest(method, url) {\n    var xhr = new XMLHttpRequest();\n\n    if (\"withCredentials\" in xhr) {\n      xhr.open(method, url, true);\n    } else if (typeof XDomainRequest !== \"undefined\") {\n      xhr = new XDomainRequest();\n      xhr.open(method, url);\n    } else {\n      xhr = null;\n    }\n\n    return xhr;\n  }\n\n  applet.isHTML5Installed = function () {\n    if (isInternetExplorer()) {\n      if ((views.is3D || html5CodebaseScript === \"web3d.nocache.js\") && getIEVersion() < 11) {\n        return false;\n      } else if (getIEVersion() < 10) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  applet.isCompiledInstalled = function () {\n    if (isInternetExplorer()) {\n      if (views.is3D && getIEVersion() < 11) {\n        return false;\n      } else if (getIEVersion() < 9) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  applet.getLoadedAppletType = function () {\n    return loadedAppletType;\n  };\n\n  applet.setPreviewImage = function (previewFilePath, loadingFilePath, playFilePath) {\n    previewImagePath = previewFilePath;\n    previewLoadingPath = loadingFilePath;\n    previewPlayPath = playFilePath;\n  };\n\n  applet.removeExistingApplet = function (appletParent, showScreenshot) {\n    var i;\n\n    if (typeof appletParent === \"string\") {\n      appletParent = document.getElementById(appletParent);\n    }\n\n    if (loadedAppletType === \"compiled\" && window[parameters.id] !== undefined) {\n      if (typeof window[parameters.id].stopAnimation === \"function\") {\n        window[parameters.id].stopAnimation();\n      }\n\n      if (typeof window[parameters.id].remove === \"function\") {\n        window[parameters.id].remove();\n      }\n\n      if (ggbApplets !== undefined) {\n        for (i = 0; i < ggbApplets.length; i++) {\n          if (ggbApplets[i] === window[parameters.id]) {\n            ggbApplets.splice(i, 1);\n          }\n        }\n      }\n\n      window[parameters.id] = undefined;\n    }\n\n    loadedAppletType = null;\n\n    for (i = 0; i < appletParent.childNodes.length; i++) {\n      var tag = appletParent.childNodes[i].tagName;\n      var className = appletParent.childNodes[i].className;\n\n      if (appletParent.childNodes[i].className === \"applet_screenshot\") {\n        if (showScreenshot) {\n          appletParent.childNodes[i].style.display = \"block\";\n          loadedAppletType = \"screenshot\";\n        } else {\n          appletParent.childNodes[i].style.display = \"none\";\n        }\n      } else if ((tag === \"APPLET\" || tag === \"ARTICLE\" || tag === \"DIV\" || loadedAppletType === \"compiled\" && (tag === \"SCRIPT\" || tag === \"STYLE\")) && className !== \"applet_scaler prerender\") {\n        appletParent.removeChild(appletParent.childNodes[i]);\n        i--;\n      }\n    }\n\n    var appName = parameters.id !== undefined ? parameters.id : \"ggbApplet\";\n    var app = window[appName];\n\n    if (app) {\n      if (_typeof(app) === \"object\" && typeof app.getBase64 === \"function\") {\n        app.remove();\n        window[appName] = null;\n      }\n    }\n  };\n\n  applet.refreshHitPoints = function () {\n    if (parseVersion(ggbHTML5LoadedCodebaseVersion) >= 5) {\n      return true;\n    }\n\n    var app = applet.getAppletObject();\n\n    if (app) {\n      if (typeof app.recalculateEnvironments === \"function\") {\n        app.recalculateEnvironments();\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  applet.startAnimation = function () {\n    var app = applet.getAppletObject();\n\n    if (app) {\n      if (typeof app.startAnimation === \"function\") {\n        app.startAnimation();\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  applet.stopAnimation = function () {\n    var app = applet.getAppletObject();\n\n    if (app) {\n      if (typeof app.stopAnimation === \"function\") {\n        app.stopAnimation();\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  applet.setPreCompiledScriptPath = function (path, version) {\n    preCompiledScriptPath = path;\n\n    if (preCompiledResourcePath === null) {\n      preCompiledResourcePath = preCompiledScriptPath;\n    }\n\n    preCompiledScriptVersion = version;\n  };\n\n  applet.setPreCompiledResourcePath = function (path) {\n    preCompiledResourcePath = path;\n  };\n\n  applet.getAppletObject = function () {\n    var appName = parameters.id !== undefined ? parameters.id : \"ggbApplet\";\n    return window[appName];\n  };\n\n  applet.resize = function () {};\n\n  var appendParam = function appendParam(applet, name, value) {\n    var param = document.createElement(\"param\");\n    param.setAttribute(\"name\", name);\n    param.setAttribute(\"value\", value);\n    applet.appendChild(param);\n  };\n\n  var valBoolean = function valBoolean(value) {\n    return value && value !== \"false\";\n  };\n\n  var injectHTML5Applet = function injectHTML5Applet(appletElem, parameters, noPreview) {\n    if (parseVersion(html5CodebaseVersion) <= 4.2) {\n      noPreview = true;\n    }\n\n    var loadScript = !isRenderGGBElementEnabled && !scriptLoadStarted;\n\n    if (!isRenderGGBElementEnabled && !scriptLoadStarted || ggbHTML5LoadedCodebaseVersion !== html5CodebaseVersion || ggbHTML5LoadedCodebaseIsWebSimple && !html5CodebaseIsWebSimple) {\n      loadScript = true;\n      isRenderGGBElementEnabled = false;\n      scriptLoadStarted = false;\n    }\n\n    var article = document.createElement(\"article\");\n    var oriWidth = parameters.width;\n    var oriHeight = parameters.height;\n\n    if (parameters.width !== undefined) {\n      if (parseVersion(html5CodebaseVersion) <= 4.4) {\n        if (valBoolean(parameters.showToolBar)) {\n          parameters.height -= 7;\n        }\n\n        if (valBoolean(parameters.showAlgebraInput)) {\n          parameters.height -= 37;\n        }\n\n        if (parameters.width < 605 && valBoolean(parameters.showToolBar)) {\n          parameters.width = 605;\n          oriWidth = 605;\n        }\n      } else {\n        var minWidth = 100;\n\n        if (valBoolean(parameters.showToolBar) || valBoolean(parameters.showMenuBar)) {\n          if (parameters.hasOwnProperty(\"customToolBar\")) {\n            parameters.customToolbar = parameters.customToolBar;\n          }\n\n          minWidth = valBoolean(parameters.showMenuBar) ? 245 : 155;\n        }\n\n        if (oriWidth < minWidth) {\n          parameters.width = minWidth;\n          oriWidth = minWidth;\n        }\n      }\n    }\n\n    article.className = \"notranslate\";\n    article.style.border = \"none\";\n    article.style.display = \"inline-block\";\n\n    for (var key in parameters) {\n      if (parameters.hasOwnProperty(key) && key !== \"appletOnLoad\" && key !== \"scale\") {\n        article.setAttribute(\"data-param-\" + key, parameters[key]);\n      }\n    }\n\n    applet.resize = function () {\n      GGBAppletUtils.responsiveResize(appletElem, parameters);\n    };\n\n    if (typeof jQuery === \"function\") {\n      jQuery(window).resize(function () {\n        applet.resize();\n      });\n    } else {\n      var oldOnResize = null;\n\n      if (window.onresize !== undefined && typeof window.onresize === \"function\") {\n        oldOnResize = window.onresize;\n      }\n\n      window.onresize = function () {\n        applet.resize();\n\n        if (typeof oldOnResize === \"function\") {\n          oldOnResize();\n        }\n      };\n    }\n\n    if (!noPreview && parameters.width !== undefined) {\n      if (!parameters.hasOwnProperty(\"showSplash\")) {\n        article.setAttribute(\"data-param-showSplash\", \"false\");\n      }\n\n      var previewPositioner = appletElem.querySelector(\".applet_scaler.prerender\");\n      var preRendered = previewPositioner !== null;\n\n      if (!preRendered) {\n        var previewContainer = createScreenShotDiv(oriWidth, oriHeight, parameters.borderColor, false);\n        previewPositioner = document.createElement(\"div\");\n        previewPositioner.className = \"applet_scaler\";\n        previewPositioner.style.position = \"relative\";\n        previewPositioner.style.display = \"block\";\n        previewPositioner.style.width = oriWidth + \"px\";\n        previewPositioner.style.height = oriHeight + \"px\";\n      } else {\n        var previewContainer = previewPositioner.querySelector(\".ggb_preview\");\n      }\n\n      if (window.GGBT_spinner) {\n        window.GGBT_spinner.attachSpinner(previewPositioner, \"66%\");\n      }\n\n      if (parseVersion(html5CodebaseVersion) >= 5) {\n        if (typeof parameters.appletOnLoad === \"function\") {\n          var oriAppletOnload = parameters.appletOnLoad;\n        }\n\n        parameters.appletOnLoad = function () {\n          var preview = appletElem.querySelector(\".ggb_preview\");\n\n          if (preview) {\n            preview.parentNode.removeChild(preview);\n          }\n\n          if (window.GGBT_spinner) {\n            window.GGBT_spinner.removeSpinner(previewPositioner);\n          }\n\n          if (window.GGBT_wsf_view) {\n            $(window).trigger(\"resize\");\n          } else {\n            window.onresize();\n          }\n\n          if (typeof oriAppletOnload === \"function\") {\n            oriAppletOnload();\n          }\n        };\n\n        if (!preRendered) {\n          previewPositioner.appendChild(previewContainer);\n        }\n      } else {\n        article.appendChild(previewContainer);\n      }\n\n      previewPositioner.appendChild(article);\n\n      if (!preRendered) {\n        appletElem.appendChild(previewPositioner);\n      }\n\n      setTimeout(function () {\n        applet.resize();\n      }, 1);\n    } else {\n      var appletScaler = document.createElement(\"div\");\n      appletScaler.className = \"applet_scaler\";\n      appletScaler.style.position = \"relative\";\n      appletScaler.style.display = \"block\";\n      appletScaler.appendChild(article);\n      appletElem.appendChild(appletScaler);\n      applet.resize();\n    }\n\n    function renderGGBElementWithParams(article, parameters) {\n      if (parameters && typeof parameters.appletOnLoad === \"function\" && typeof renderGGBElement === \"function\") {\n        renderGGBElement(article, parameters.appletOnLoad);\n      } else {\n        renderGGBElement(article);\n      }\n\n      log(\"GeoGebra HTML5 applet injected and rendered with previously loaded codebase.\", parameters);\n    }\n\n    function renderGGBElementOnTube(a, parameters) {\n      if (typeof renderGGBElement === \"undefined\") {\n        if (html5AppletsToProcess === null) {\n          html5AppletsToProcess = [];\n        }\n\n        html5AppletsToProcess.push({\n          article: a,\n          params: parameters\n        });\n\n        window.renderGGBElementReady = function () {\n          isRenderGGBElementEnabled = true;\n\n          if (html5AppletsToProcess !== null && html5AppletsToProcess.length) {\n            html5AppletsToProcess.forEach(function (obj) {\n              renderGGBElementWithParams(obj.article, obj.params);\n            });\n            html5AppletsToProcess = null;\n          }\n        };\n\n        if (parseVersion(html5CodebaseVersion) < 5) {\n          a.className += \" geogebraweb\";\n        }\n      } else {\n        renderGGBElementWithParams(a, parameters);\n      }\n    }\n\n    if (loadScript) {\n      scriptLoadStarted = true;\n\n      if (parseVersion(html5CodebaseVersion) >= 4.4) {\n        var f_c_u;\n\n        if (fonts_css_url === null) {\n          f_c_u = html5Codebase + \"css/fonts.css\";\n        } else {\n          f_c_u = fonts_css_url;\n        }\n\n        var fontscript1 = document.createElement(\"script\");\n        fontscript1.type = \"text/javascript\";\n        fontscript1.innerHTML = \"\\n\" + \"//<![CDATA[\\n\" + \"WebFontConfig = {\\n\" + \"   loading: function() {},\\n\" + \"   active: function() {},\\n\" + \"   inactive: function() {},\\n\" + \"   fontloading: function(familyName, fvd) {},\\n\" + \"   fontactive: function(familyName, fvd) {},\\n\" + \"   fontinactive: function(familyName, fvd) {},\\n\" + \"   custom: {\\n\" + '       families: [\"geogebra-sans-serif\", \"geogebra-serif\"],\\n' + '           urls: [ \"' + f_c_u + '\" ]\\n' + \"   }\\n\" + \"};\\n\" + \"//]]>\\n\" + \"\\n\";\n        appletElem.appendChild(fontscript1);\n\n        if (!html5Codebase.requirejs) {\n          var fontscript2 = document.createElement(\"script\");\n          fontscript2.type = \"text/javascript\";\n          fontscript2.src = html5Codebase + \"js/webfont.js\";\n          appletElem.appendChild(fontscript2);\n        }\n      }\n\n      for (var i = 0; i < article.childNodes.length; i++) {\n        var tag = article.childNodes[i].tagName;\n\n        if (tag === \"TABLE\") {\n          article.removeChild(article.childNodes[i]);\n          i--;\n        }\n      }\n\n      if (ggbHTML5LoadedScript !== null) {\n        var el = document.querySelector('script[src=\"' + ggbHTML5LoadedScript + '\"]');\n\n        if (el !== undefined) {\n          el.parentNode.removeChild(el);\n        }\n      }\n\n      var script = document.createElement(\"script\");\n\n      var scriptLoaded = function scriptLoaded() {\n        renderGGBElementOnTube(article, parameters);\n      };\n\n      log(html5Codebase);\n      script.src = html5Codebase + html5CodebaseScript;\n      script.onload = scriptLoaded;\n      ggbHTML5LoadedCodebaseIsWebSimple = html5CodebaseIsWebSimple;\n      ggbHTML5LoadedCodebaseVersion = html5CodebaseVersion;\n      ggbHTML5LoadedScript = script.src;\n      log(\"GeoGebra HTML5 codebase loaded: '\" + html5Codebase + \"'.\", parameters);\n\n      if (html5Codebase.requirejs) {\n        window.require([\"geogebra/runtime/js/web3d/web3d.nocache\"], scriptLoaded);\n      } else {\n        appletElem.appendChild(script);\n      }\n    } else {\n      renderGGBElementOnTube(article, parameters);\n    }\n\n    parameters.height = oriHeight;\n    parameters.width = oriWidth;\n  };\n\n  var injectCompiledApplet = function injectCompiledApplet(appletElem, parameters, noPreview) {\n    var appletObjectName = parameters.id;\n    var viewContainer = document.createElement(\"div\");\n    viewContainer.id = \"view-container-\" + appletObjectName;\n    viewContainer.setAttribute(\"width\", parameters.width);\n    viewContainer.setAttribute(\"height\", parameters.height);\n    viewContainer.style.width = parameters.width + \"px\";\n    viewContainer.style.height = parameters.height + \"px\";\n\n    if (parameters.showSplash === undefined) {\n      parameters.showSplash = true;\n    }\n\n    var oldOnResize = null;\n\n    if (window.onresize !== undefined && typeof window.onresize === \"function\") {\n      oldOnResize = window.onresize;\n    }\n\n    window.onresize = function () {\n      var scale = GGBAppletUtils.getScale(parameters, appletElem);\n      var scaleElem = null;\n\n      for (var i = 0; i < appletElem.childNodes.length; i++) {\n        if (appletElem.childNodes[i].className.startsWith(\"applet_scaler\")) {\n          scaleElem = appletElem.childNodes[i];\n          break;\n        }\n      }\n\n      if (scaleElem !== null) {\n        scaleElem.parentNode.style.transform = \"\";\n\n        if (!isNaN(scale) && scale !== 1) {\n          GGBAppletUtils.scaleElement(scaleElem, scale);\n          scaleElem.parentNode.style.width = (parameters.width + 2) * scale + \"px\";\n          scaleElem.parentNode.style.height = (parameters.height + 2) * scale + \"px\";\n        } else {\n          GGBAppletUtils.scaleElement(scaleElem, 1);\n          scaleElem.parentNode.style.width = parameters.width + 2 + \"px\";\n          scaleElem.parentNode.style.height = parameters.height + 2 + \"px\";\n        }\n      }\n\n      var appName = parameters.id !== undefined ? parameters.id : \"ggbApplet\";\n      var app = window[appName];\n\n      if (app !== undefined && app !== null && typeof app.recalculateEnvironments === \"function\") {\n        app.recalculateEnvironments();\n      }\n\n      if (oldOnResize !== null) {\n        oldOnResize();\n      }\n    };\n\n    var viewImages = document.createElement(\"div\");\n    viewImages.id = \"__ggb__images\";\n    var appletScaler;\n\n    if (!noPreview && previewImagePath !== null && parseVersion(html5CodebaseVersion) >= 4.4 && parameters.width !== undefined) {\n      var previewContainer = createScreenShotDiv(parameters.width, parameters.height, parameters.borderColor, false);\n      var previewPositioner = document.createElement(\"div\");\n      previewPositioner.style.position = \"relative\";\n      previewPositioner.className = \"applet_scaler\";\n      previewPositioner.style.display = \"block\";\n      previewPositioner.style.width = parameters.width + \"px\";\n      previewPositioner.style.height = parameters.height + \"px\";\n      previewPositioner.appendChild(previewContainer);\n      appletElem.appendChild(previewPositioner);\n      appletScaler = previewPositioner;\n      setTimeout(function () {\n        window.onresize();\n      }, 1);\n\n      if (_typeof(window.GGBT_ws_header_footer) === \"object\") {\n        window.GGBT_ws_header_footer.setWsScrollerHeight();\n      }\n    } else {\n      appletScaler = document.createElement(\"div\");\n      appletScaler.className = \"applet_scaler\";\n      appletScaler.style.position = \"relative\";\n      appletScaler.style.display = \"block\";\n      appletElem.appendChild(appletScaler);\n      window.onresize();\n    }\n\n    if (!ggbCompiledResourcesLoadFinished && !ggbCompiledResourcesLoadInProgress) {\n      var resource4 = document.createElement(\"script\");\n      resource4.type = \"text/javascript\";\n      resource4.innerHTML = \"\\n\" + \"WebFontConfig = {\\n\" + \"   loading: function() {},\\n\" + \"   active: function() {},\\n\" + \"   inactive: function() {},\\n\" + \"   fontloading: function(familyName, fvd) {},\\n\" + \"   fontactive: function(familyName, fvd) {\" + \"       if (!ggbCompiledAppletsLoaded) {\" + \"           ggbCompiledAppletsLoaded = true;\" + \"           \" + \"           setTimeout(function() {\" + \"               ggbCompiledResourcesLoadFinished = true;\" + \"               ggbCompiledResourcesLoadInProgress = false;\" + \"               if (window.ggbApplets != undefined) {\" + \"                   for (var i = 0 ; i < window.ggbApplets.length ; i++) {\" + '                       window.ggbApplets[i].init({scale:window.ggbApplets[i].scaleParameter, url:window.ggbApplets[i].preCompiledScriptPath+\"/\", ss:' + (parameters.showSplash ? \"true\" : \"false\") + \", sdz:\" + (parameters.enableShiftDragZoom ? \"true\" : \"false\") + \", rc:\" + (parameters.enableRightClick ? \"true\" : \"false\") + \", sri:\" + (parameters.showResetIcon ? \"true\" : \"false\") + \"});\" + \"                   }\" + \"               }\" + '               if (typeof window.ggbCompiledAppletsOnLoad == \"function\") {' + \"                   window.ggbCompiledAppletsOnLoad();\" + \"               }\" + \"           },1);\" + \"       }\" + \"   },\\n\" + \"   fontinactive: function(familyName, fvd) {},\\n\" + \"   custom: {\\n\" + '       families: [\"geogebra-sans-serif\", \"geogebra-serif\"],\\n' + '           urls: [ \"' + preCompiledResourcePath + \"/fonts/fonts.css\" + '\" ]\\n' + \"   }\\n\" + \"};\\n\" + \"\\n\";\n      var resource5 = document.createElement(\"script\");\n      resource5.type = \"text/javascript\";\n      resource5.src = preCompiledResourcePath + \"/fonts/webfont.js\";\n      ggbCompiledResourcesLoadInProgress = true;\n      appletScaler.appendChild(resource4);\n      appletScaler.appendChild(resource5);\n    }\n\n    var appletStyle = document.createElement(\"style\");\n    appletStyle.innerHTML = \"\\n\" + \".view-frame {\\n\" + \"    border: 1px solid black;\\n\" + \"    display: inline-block;\\n\" + \"}\\n\" + \"#tip {\\n\" + \"    background-color: yellow;\\n\" + \"    border: 1px solid blue;\\n\" + \"    position: absolute;\\n\" + \"    left: -200px;\\n\" + \"    top: 100px;\\n\" + \"};\\n\";\n    appletScaler.appendChild(appletStyle);\n    var script = document.createElement(\"script\");\n\n    var scriptLoaded = function scriptLoaded() {\n      window[appletObjectName].preCompiledScriptPath = preCompiledScriptPath;\n      window[appletObjectName].scaleParameter = parameters.scale;\n\n      if (!noPreview) {\n        appletScaler.querySelector(\".ggb_preview\").remove();\n      }\n\n      appletScaler.appendChild(viewContainer);\n      appletScaler.appendChild(viewImages);\n\n      if (ggbCompiledResourcesLoadFinished) {\n        window[appletObjectName].init({\n          scale: parameters.scale,\n          url: preCompiledScriptPath + \"/\",\n          ss: parameters.showSplash,\n          sdz: parameters.enableShiftDragZoom,\n          rc: parameters.enableRightClick,\n          sri: parameters.showResetIcon\n        });\n\n        if (typeof window.ggbAppletOnLoad === \"function\") {\n          window.ggbAppletOnLoad(appletElem.id);\n        }\n\n        if (typeof parameters.appletOnLoad === \"function\") {\n          parameters.appletOnLoad(appletElem.id);\n        }\n      }\n    };\n\n    var scriptFile = preCompiledScriptPath + \"/applet.js\" + (preCompiledScriptVersion !== null && preCompiledScriptVersion !== null ? \"?v=\" + preCompiledScriptVersion : \"\");\n    script.src = scriptFile;\n    script.onload = scriptLoaded;\n    log(\"GeoGebra precompiled applet injected. Script=\" + scriptFile + \".\");\n    appletScaler.appendChild(script);\n  };\n\n  var injectScreenshot = function injectScreenshot(appletElem, parameters, showPlayButton) {\n    var previewContainer = createScreenShotDiv(parameters.width, parameters.height, parameters.borderColor, showPlayButton);\n    var previewPositioner = document.createElement(\"div\");\n    previewPositioner.style.position = \"relative\";\n    previewPositioner.style.display = \"block\";\n    previewPositioner.style.width = parameters.width + \"px\";\n    previewPositioner.style.height = parameters.height + \"px\";\n    previewPositioner.className = \"applet_screenshot applet_scaler\" + (showPlayButton ? \" applet_screenshot_play\" : \"\");\n    previewPositioner.appendChild(previewContainer);\n    var scale = GGBAppletUtils.getScale(parameters, appletElem, showPlayButton);\n\n    if (showPlayButton) {\n      appletElem.appendChild(getPlayButton());\n\n      if (!window.GGBT_wsf_view) {\n        appletElem.style.position = \"relative\";\n      }\n    } else if (window.GGBT_spinner) {\n      window.GGBT_spinner.attachSpinner(previewPositioner, \"66%\");\n    }\n\n    appletElem.appendChild(previewPositioner);\n\n    if (scale !== 1 && !isNaN(scale)) {\n      GGBAppletUtils.scaleElement(previewPositioner, scale);\n      previewPositioner.style.width = parameters.width + \"px\";\n      previewPositioner.style.height = parameters.height + \"px\";\n      previewPositioner.parentNode.style.width = parameters.width * scale + \"px\";\n      previewPositioner.parentNode.style.height = parameters.height * scale + \"px\";\n    }\n\n    applet.resize = function () {\n      resizeScreenshot(appletElem, previewContainer, previewPositioner, showPlayButton);\n    };\n\n    if (typeof jQuery === \"function\") {\n      jQuery(window).resize(function () {\n        applet.resize();\n      });\n    } else {\n      var oldOnResize = null;\n\n      if (window.onresize !== undefined && typeof window.onresize === \"function\") {\n        oldOnResize = window.onresize;\n      }\n\n      window.onresize = function () {\n        applet.resize();\n\n        if (typeof oldOnResize === \"function\") {\n          oldOnResize();\n        }\n      };\n    }\n\n    applet.resize();\n  };\n\n  function resizeScreenshot(appletElem, previewContainer, previewPositioner, showPlayButton, oldOnResize) {\n    if (!appletElem.contains(previewContainer)) {\n      return;\n    }\n\n    if (_typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen()) {\n      if (appletElem.id !== \"fullscreencontent\") {\n        return;\n      }\n\n      window.GGBT_wsf_view.setCloseBtnPosition(appletElem);\n    }\n\n    var scale = GGBAppletUtils.getScale(parameters, appletElem, showPlayButton);\n\n    if (previewPositioner.parentNode !== null) {\n      if (!isNaN(scale) && scale !== 1) {\n        GGBAppletUtils.scaleElement(previewPositioner, scale);\n        previewPositioner.parentNode.style.width = parameters.width * scale + \"px\";\n        previewPositioner.parentNode.style.height = parameters.height * scale + \"px\";\n      } else {\n        GGBAppletUtils.scaleElement(previewPositioner, 1);\n        previewPositioner.parentNode.style.width = parameters.width + \"px\";\n        previewPositioner.parentNode.style.height = parameters.height + \"px\";\n      }\n    }\n\n    if (_typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen()) {\n      GGBAppletUtils.positionCenter(appletElem);\n    }\n\n    if (_typeof(window.GGBT_ws_header_footer) === \"object\") {\n      window.GGBT_ws_header_footer.setWsScrollerHeight();\n    }\n\n    if (typeof oldOnResize === \"function\") {\n      oldOnResize();\n    }\n  }\n\n  applet.onExitFullscreen = function (fullscreenContainer, appletElem) {\n    appletElem.appendChild(fullscreenContainer);\n  };\n\n  var injectPlayButton = function injectPlayButton(appletElem, parameters, noPreview, type) {\n    injectScreenshot(appletElem, parameters, true);\n\n    var play = function play() {\n      var elems = [];\n\n      for (i = 0; i < appletElem.childNodes.length; i++) {\n        elems.push(appletElem.childNodes[i]);\n      }\n\n      if (window.GGBT_wsf_view) {\n        var content = window.GGBT_wsf_view.renderFullScreen(appletElem, parameters.id);\n        var container = document.getElementById(\"fullscreencontainer\");\n        var oldcontent = jQuery(appletElem).find(\".fullscreencontent\");\n\n        if (oldcontent.length > 0) {\n          content.remove();\n          oldcontent.attr(\"id\", \"fullscreencontent\").show();\n          jQuery(container).append(oldcontent);\n          window.onresize();\n        } else {\n          injectHTML5Applet(content, parameters, false);\n        }\n\n        window.GGBT_wsf_view.launchFullScreen(container);\n      } else {\n        loadedAppletType = type;\n        injectHTML5Applet(appletElem, parameters, false);\n      }\n\n      if (!window.GGBT_wsf_view) {\n        for (i = 0; i < elems.length; i++) {\n          appletElem.removeChild(elems[i]);\n        }\n      }\n    };\n\n    var imgs = appletElem.getElementsByClassName(\"ggb_preview_play\");\n\n    for (var i = 0; i < imgs.length; i++) {\n      imgs[i].addEventListener(\"click\", play, false);\n      imgs[i].addEventListener(\"ontouchstart\", play, false);\n    }\n\n    if (typeof window.ggbAppletPlayerOnload === \"function\") {\n      window.ggbAppletPlayerOnload(appletElem);\n    }\n\n    if (isMobileDevice() && window.GGBT_wsf_view) {\n      $(\".wsf-element-fullscreen-button\").remove();\n    }\n  };\n\n  var getPlayButton = function getPlayButton() {\n    var playButtonContainer = document.createElement(\"div\");\n    playButtonContainer.className = \"ggb_preview_play icon-applet-play\";\n\n    if (!window.GGBT_wsf_view) {\n      var css = \"\" + \".icon-applet-play {\" + \"   width: 100%;\" + \"   height: 100%;box-sizing: border-box;position: absolute;z-index: 1001;cursor: pointer;border-width: 0px;\" + \"   background-color: transparent;background-repeat: no-repeat;left: 0;top: 0;background-position: center center;\" + '   background-image: url(\"' + getTubeURL() + '/images/worksheet/icon-start-applet.png\");' + \"}\" + \".icon-applet-play:hover {\" + 'background-image: url(\"' + getTubeURL() + '/images/worksheet/icon-start-applet-hover.png\");' + \"}\";\n      var style = document.createElement(\"style\");\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }\n\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n    }\n\n    return playButtonContainer;\n  };\n\n  var createScreenShotDiv = function createScreenShotDiv(oriWidth, oriHeight, borderColor, showPlayButton) {\n    var previewContainer = document.createElement(\"div\");\n    previewContainer.className = \"ggb_preview\";\n    previewContainer.style.position = \"absolute\";\n    previewContainer.style.zIndex = \"90\";\n    previewContainer.style.width = oriWidth - 2 + \"px\";\n    previewContainer.style.height = oriHeight - 2 + \"px\";\n    previewContainer.style.top = \"0px\";\n    previewContainer.style.left = \"0px\";\n    previewContainer.style.overflow = \"hidden\";\n    previewContainer.style.backgroundColor = \"white\";\n    var bc = \"lightgrey\";\n\n    if (borderColor !== undefined) {\n      if (borderColor === \"none\") {\n        bc = \"transparent\";\n      } else {\n        bc = borderColor;\n      }\n    }\n\n    previewContainer.style.border = \"1px solid \" + bc;\n    var preview = document.createElement(\"img\");\n    preview.style.position = \"relative\";\n    preview.style.zIndex = \"1000\";\n    preview.style.top = \"-1px\";\n    preview.style.left = \"-1px\";\n\n    if (previewImagePath !== null) {\n      preview.setAttribute(\"src\", previewImagePath);\n    }\n\n    preview.style.opacity = 0.7;\n\n    if (previewLoadingPath !== null) {\n      var previewOverlay;\n      var pWidth, pHeight;\n\n      if (!showPlayButton) {\n        previewOverlay = document.createElement(\"img\");\n        previewOverlay.style.position = \"absolute\";\n        previewOverlay.style.zIndex = \"1001\";\n        previewOverlay.style.opacity = 1;\n        preview.style.opacity = 0.3;\n        pWidth = 360;\n\n        if (pWidth > oriWidth / 4 * 3) {\n          pWidth = oriWidth / 4 * 3;\n        }\n\n        pHeight = pWidth / 5.8;\n        previewOverlay.setAttribute(\"src\", previewLoadingPath);\n        previewOverlay.setAttribute(\"width\", pWidth);\n        previewOverlay.setAttribute(\"height\", pHeight);\n        var pX = (oriWidth - pWidth) / 2;\n        var pY = (oriHeight - pHeight) / 2;\n        previewOverlay.style.left = pX + \"px\";\n        previewOverlay.style.top = pY + \"px\";\n        previewContainer.appendChild(previewOverlay);\n      }\n    }\n\n    previewContainer.appendChild(preview);\n    return previewContainer;\n  };\n\n  var detectAppletType = function detectAppletType(preferredType) {\n    preferredType = preferredType.toLowerCase();\n\n    if (preferredType === \"html5\" || preferredType === \"screenshot\" || preferredType === \"compiled\") {\n      return preferredType;\n    }\n\n    if (preferredType === \"prefercompiled\" && preCompiledScriptPath !== null) {\n      if (applet.isCompiledInstalled()) {\n        return \"compiled\";\n      }\n    }\n\n    return \"html5\";\n  };\n\n  var getIEVersion = function getIEVersion() {\n    var a = navigator.appVersion;\n\n    if (a.indexOf(\"Trident/7.0\") > 0) {\n      return 11;\n    } else {\n      return a.indexOf(\"MSIE\") + 1 ? parseFloat(a.split(\"MSIE\")[1]) : 999;\n    }\n  };\n\n  var isInternetExplorer = function isInternetExplorer() {\n    return getIEVersion() !== 999;\n  };\n\n  var modules = [\"web\", \"webSimple\", \"web3d\", \"tablet\", \"tablet3d\", \"phone\"];\n\n  var setDefaultHTML5CodebaseForVersion = function setDefaultHTML5CodebaseForVersion(version, offline) {\n    html5CodebaseVersion = version;\n\n    if (offline) {\n      setHTML5CodebaseInternal(html5CodebaseVersion, true);\n      return;\n    }\n\n    var hasWebSimple = !html5NoWebSimple;\n\n    if (hasWebSimple) {\n      var v = parseVersion(html5CodebaseVersion);\n\n      if (!isNaN(v) && v < 4.4) {\n        hasWebSimple = false;\n      }\n    }\n\n    var protocol, codebase;\n\n    if (window.location.protocol.substr(0, 4) === \"http\") {\n      protocol = window.location.protocol;\n    } else {\n      protocol = \"http:\";\n    }\n\n    var index = html5CodebaseVersion.indexOf(\"//\");\n\n    if (index > 0) {\n      codebase = html5CodebaseVersion;\n    } else if (index === 0) {\n      codebase = protocol + html5CodebaseVersion;\n    } else {\n      codebase = \"https://cdn.geogebra.org/apps/\" + latestVersion + \"/\";\n    }\n\n    for (var key in modules) {\n      if (html5CodebaseVersion.slice(modules[key].length * -1) === modules[key] || html5CodebaseVersion.slice((modules[key].length + 1) * -1) === modules[key] + \"/\") {\n        setHTML5CodebaseInternal(codebase, false);\n        return;\n      }\n    }\n\n    if (!GGBAppletUtils.isFlexibleWorksheetEditor() && hasWebSimple && !views.is3D && !views.AV && !views.SV && !views.CV && !views.EV2 && !views.CP && !views.PC && !views.DA && !views.FI && !views.PV && !valBoolean(parameters.showToolBar) && !valBoolean(parameters.showMenuBar) && !valBoolean(parameters.showAlgebraInput) && !valBoolean(parameters.enableRightClick)) {\n      codebase += \"webSimple/\";\n    } else {\n      codebase += \"web3d/\";\n    }\n\n    setHTML5CodebaseInternal(codebase, false);\n  };\n\n  var setHTML5CodebaseInternal = function setHTML5CodebaseInternal(codebase, offline) {\n    if (codebase.requirejs) {\n      html5Codebase = codebase;\n      return;\n    }\n\n    if (codebase.slice(-1) !== \"/\") {\n      codebase += \"/\";\n    }\n\n    html5Codebase = codebase;\n\n    if (offline === null) {\n      offline = codebase.indexOf(\"http\") === -1;\n    }\n\n    isHTML5Offline = offline;\n    html5CodebaseScript = \"web.nocache.js\";\n    html5CodebaseIsWebSimple = false;\n    var folders = html5Codebase.split(\"/\");\n\n    if (folders.length > 1) {\n      if (!offline && folders[folders.length - 2] === \"webSimple\") {\n        html5CodebaseScript = \"webSimple.nocache.js\";\n        html5CodebaseIsWebSimple = true;\n      } else if (modules.indexOf(folders[folders.length - 2]) >= 0) {\n        html5CodebaseScript = folders[folders.length - 2] + \".nocache.js\";\n      }\n    }\n\n    folders = codebase.split(\"/\");\n    html5CodebaseVersion = folders[folders.length - 3];\n\n    if (html5CodebaseVersion.substr(0, 4) === \"test\") {\n      html5CodebaseVersion = html5CodebaseVersion.substr(4, 1) + \".\" + html5CodebaseVersion.substr(5, 1);\n    } else if (html5CodebaseVersion.substr(0, 3) === \"war\" || html5CodebaseVersion.substr(0, 4) === \"beta\") {\n      html5CodebaseVersion = \"5.0\";\n    }\n\n    var numVersion = parseFloat(html5CodebaseVersion);\n\n    if (numVersion !== NaN && numVersion < 5) {\n      console.log(\"The GeoGebra HTML5 codebase version \" + numVersion + \" is deprecated. Using version \" + latestVersion + \" instead.\");\n      setDefaultHTML5CodebaseForVersion(\"5.0\", offline);\n    }\n  };\n\n  var log = function log(text, parameters) {\n    if (window.console && window.console.log) {\n      if (!parameters || typeof parameters.showLogging === \"undefined\" || parameters.showLogging && parameters.showLogging !== \"false\") {\n        console.log(text);\n      }\n    }\n  };\n\n  if (parameters.material_id !== undefined) {\n    fetchParametersFromTube(continueInit);\n  } else {\n    continueInit();\n  }\n\n  function continueInit() {\n    var html5Version = ggbVersion;\n\n    if (html5OverwrittenCodebaseVersion !== null) {\n      html5Version = html5OverwrittenCodebaseVersion;\n    } else {\n      if (parseFloat(html5Version) < 5) {\n        html5Version = \"5.0\";\n      }\n    }\n\n    setDefaultHTML5CodebaseForVersion(html5Version, false);\n\n    if (html5OverwrittenCodebase !== null) {\n      setHTML5CodebaseInternal(html5OverwrittenCodebase, isHTML5Offline);\n    }\n\n    initComplete = true;\n  }\n\n  return applet;\n};\n\nvar GGBAppletUtils = function () {\n  \"use strict\";\n\n  function isFlexibleWorksheetEditor() {\n    return window.GGBT_wsf_edit !== undefined;\n  }\n\n  function scaleElement(el, scale) {\n    if (scale != 1) {\n      el.style.transformOrigin = \"0% 0% 0px\";\n      el.style.webkitTransformOrigin = \"0% 0% 0px\";\n      el.style.transform = \"scale(\" + scale + \",\" + scale + \")\";\n      el.style.webkitTransform = \"scale(\" + scale + \",\" + scale + \")\";\n      el.style.maxWidth = \"initial\";\n\n      if (el.querySelector(\".ggb_preview\") !== null) {\n        el.querySelector(\".ggb_preview\").style.maxWidth = \"initial\";\n      }\n\n      if (el.querySelectorAll(\".ggb_preview img\")[0] !== undefined) {\n        el.querySelectorAll(\".ggb_preview img\")[0].style.maxWidth = \"initial\";\n      }\n\n      if (el.querySelectorAll(\".ggb_preview img\")[1] !== undefined) {\n        el.querySelectorAll(\".ggb_preview img\")[1].style.maxWidth = \"initial\";\n      }\n    } else {\n      el.style.transform = \"none\";\n      el.style.webkitTransform = \"none\";\n    }\n  }\n\n  function getWidthHeight(appletElem, appletWidth, allowUpscale, noBorder, scaleContainerClass) {\n    var container = null;\n\n    if (scaleContainerClass != undefined && scaleContainerClass != \"\") {\n      var parent = appletElem.parentNode;\n\n      while (parent != null) {\n        if ((\" \" + parent.className + \" \").indexOf(\" \" + scaleContainerClass + \" \") > -1) {\n          container = parent;\n          break;\n        } else {\n          parent = parent.parentNode;\n        }\n      }\n    }\n\n    var myWidth = 0,\n        myHeight = 0,\n        windowWidth = 0,\n        border = 0,\n        borderRight = 0,\n        borderLeft = 0,\n        borderTop = 0;\n\n    if (container) {\n      myWidth = container.offsetWidth;\n      myHeight = container.offsetWidth;\n    } else {\n      if (window.innerWidth && document.documentElement.clientWidth) {\n        myWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n        myHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n        windowWidth = myWidth;\n      } else if (typeof window.innerWidth === \"number\") {\n        myWidth = window.innerWidth;\n        myHeight = window.innerHeight;\n        windowWidth = window.innerWidth;\n      } else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {\n        myWidth = document.documentElement.clientWidth;\n        myHeight = document.documentElement.clientHeight;\n        windowWidth = document.documentElement.clientWidth;\n      } else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {\n        myWidth = document.body.clientWidth;\n        myHeight = document.body.clientHeight;\n        windowWidth = document.documentElement.clientWidth;\n      }\n\n      if (appletElem) {\n        var rect = appletElem.getBoundingClientRect();\n\n        if (rect.left > 0) {\n          if (rect.left <= myWidth && (noBorder === undefined || !noBorder)) {\n            if (document.dir === \"rtl\") {\n              borderRight = myWidth - rect.width - rect.left;\n              borderLeft = windowWidth <= 480 ? 10 : 30;\n            } else {\n              borderLeft = rect.left;\n              borderRight = windowWidth <= 480 ? 10 : 30;\n            }\n\n            border = borderLeft + borderRight;\n          }\n        }\n      }\n\n      if (appletElem && _typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen()) {\n        var appletRect = appletElem.getBoundingClientRect();\n\n        if (window.GGBT_wsf_view.getCloseBtnPosition() === \"closePositionRight\") {\n          border = 40;\n          borderTop = 0;\n        } else if (window.GGBT_wsf_view.getCloseBtnPosition() === \"closePositionTop\") {\n          border = 0;\n          borderTop = 40;\n        }\n      }\n    }\n\n    if (appletElem) {\n      if ((allowUpscale === undefined || !allowUpscale) && appletWidth > 0 && appletWidth + border < myWidth) {\n        myWidth = appletWidth;\n      } else {\n        myWidth -= border;\n      }\n\n      if (_typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen() && (allowUpscale === undefined || !allowUpscale)) {\n        myHeight -= borderTop;\n      }\n    }\n\n    return {\n      width: myWidth,\n      height: myHeight\n    };\n  }\n\n  function calcScale(parameters, appletElem, allowUpscale, showPlayButton, scaleContainerClass) {\n    if (parameters.isScreenshoGenerator) {\n      return 1;\n    }\n\n    var ignoreHeight = showPlayButton !== undefined && showPlayButton;\n    var noScaleMargin = parameters.noScaleMargin != undefined && parameters.noScaleMargin;\n    var windowSize = getWidthHeight(appletElem, parameters.width, allowUpscale, ignoreHeight && window.GGBT_wsf_view || noScaleMargin, scaleContainerClass);\n    var windowWidth = parseInt(windowSize.width);\n    var appletWidth = parameters.width;\n    var appletHeight = parameters.height;\n\n    if (appletWidth === undefined) {\n      var articles = appletElem.getElementsByTagName(\"article\");\n\n      if (articles.length === 1) {\n        appletWidth = articles[0].offsetWidth;\n        appletHeight = articles[0].offsetHeight;\n      }\n    }\n\n    var xscale = windowWidth / appletWidth;\n    var yscale = ignoreHeight ? 1 : windowSize.height / appletHeight;\n\n    if (allowUpscale !== undefined && !allowUpscale) {\n      xscale = Math.min(1, xscale);\n      yscale = Math.min(1, yscale);\n    }\n\n    return Math.min(xscale, yscale);\n  }\n\n  function getScale(parameters, appletElem, showPlayButton) {\n    var scale = 1,\n        autoScale,\n        allowUpscale = false;\n\n    if (parameters.hasOwnProperty(\"allowUpscale\")) {\n      allowUpscale = parameters.allowUpscale;\n    }\n\n    if (parameters.hasOwnProperty(\"scale\")) {\n      scale = parseFloat(parameters.scale);\n\n      if (isNaN(scale) || scale === null || scale === 0) {\n        scale = 1;\n      }\n\n      if (scale > 1) {\n        allowUpscale = true;\n      }\n    }\n\n    if (appletElem && _typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen()) {\n      allowUpscale = true;\n    }\n\n    if (!isFlexibleWorksheetEditor() && !(parameters.hasOwnProperty(\"disableAutoScale\") && parameters.disableAutoScale)) {\n      autoScale = calcScale(parameters, appletElem, allowUpscale, showPlayButton, parameters.scaleContainerClass);\n    } else {\n      return scale;\n    }\n\n    if (allowUpscale && (!parameters.hasOwnProperty(\"scale\") || scale === 1)) {\n      return autoScale;\n    } else {\n      return Math.min(scale, autoScale);\n    }\n  }\n\n  function positionCenter(appletElem) {\n    var windowWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n    var windowHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    var appletRect = appletElem.getBoundingClientRect();\n    var calcHorizontalBorder = (windowWidth - appletRect.width) / 2;\n    var calcVerticalBorder = (windowHeight - appletRect.height) / 2;\n\n    if (calcVerticalBorder < 0) {\n      calcVerticalBorder = 0;\n    }\n\n    appletElem.style.position = \"relative\";\n\n    if (window.GGBT_wsf_view.getCloseBtnPosition() === \"closePositionRight\") {\n      if (calcHorizontalBorder < 40) {\n        appletElem.style.left = \"40px\";\n      } else {\n        appletElem.style.left = calcHorizontalBorder + \"px\";\n      }\n\n      appletElem.style.top = calcVerticalBorder + \"px\";\n    } else if (window.GGBT_wsf_view.getCloseBtnPosition() === \"closePositionTop\") {\n      if (calcVerticalBorder < 40) {\n        appletElem.style.top = \"40px\";\n      } else {\n        appletElem.style.top = calcVerticalBorder + \"px\";\n      }\n\n      appletElem.style.left = calcHorizontalBorder + \"px\";\n    }\n  }\n\n  function responsiveResize(appletElem, parameters) {\n    var article = appletElem.getElementsByTagName(\"article\")[0];\n\n    if (article) {\n      if (_typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen()) {\n        var articles = appletElem.getElementsByTagName(\"article\");\n\n        if (articles.length > 0 && parameters.id !== articles[0].getAttribute(\"data-param-id\")) {\n          return;\n        }\n\n        window.GGBT_wsf_view.setCloseBtnPosition(appletElem);\n      }\n\n      var scale = getScale(parameters, appletElem);\n      article.removeAttribute(\"data-param-scale\");\n      article.setAttribute(\"data-scalex\", scale);\n      article.setAttribute(\"data-scaley\", scale);\n\n      if (isFlexibleWorksheetEditor()) {\n        article.setAttribute(\"data-param-scale\", scale);\n      }\n\n      var scaleElem = null;\n\n      for (var i = 0; i < appletElem.childNodes.length; i++) {\n        if (appletElem.childNodes[i].className !== undefined && appletElem.childNodes[i].className.startsWith(\"applet_scaler\")) {\n          scaleElem = appletElem.childNodes[i];\n          break;\n        }\n      }\n\n      if (scaleElem !== null && scaleElem.querySelector(\".noscale\") !== null) {\n        return;\n      }\n\n      if (scaleElem !== null && !scaleElem.className.match(/fullscreen/)) {\n        scaleElem.parentNode.style.transform = \"\";\n\n        if (!isNaN(scale) && scale !== 1) {\n          scaleElem.parentNode.style.width = parameters.width * scale + \"px\";\n          scaleElem.parentNode.style.height = parameters.height * scale + \"px\";\n          scaleElement(scaleElem, scale);\n        } else {\n          scaleElement(scaleElem, 1);\n          scaleElem.parentNode.style.width = parameters.width + \"px\";\n          scaleElem.parentNode.style.height = parameters.height + \"px\";\n        }\n      }\n\n      if (_typeof(window.GGBT_wsf_view) === \"object\" && window.GGBT_wsf_view.isFullscreen()) {\n        positionCenter(appletElem);\n      }\n\n      var appName = parameters.id !== undefined ? parameters.id : \"ggbApplet\";\n      var app = window[appName];\n\n      if (app !== undefined && app !== null && typeof app.recalculateEnvironments === \"function\") {\n        app.recalculateEnvironments();\n      }\n\n      if (window.GGBT_wsf_view && !window.GGBT_wsf_view.isFullscreen()) {\n        window.GGBT_wsf_general.adjustContentToResize($(article).parents(\".content-added-content\"));\n      }\n    }\n  }\n\n  return {\n    responsiveResize: responsiveResize,\n    isFlexibleWorksheetEditor: isFlexibleWorksheetEditor,\n    positionCenter: positionCenter,\n    getScale: getScale,\n    scaleElement: scaleElement\n  };\n}();\n\nif (typeof define === \"function\" && define.amd) {\n  define([], function () {\n    return GGBApplet;\n  });\n}"],"mappingssourceRoot":""}